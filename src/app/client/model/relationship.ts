/**
 * con-api
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { EntityType } from './entityType';


/**
 * Represents a relationship between two entities (bidirectional)
 */
export interface Relationship { 
    userId?: string;
    /**
     * Unique ID for this relationship
     */
    id?: string;
    fromEntityType?: EntityType;
    /**
     * Source entity ID (string to allow composite IDs like Name;YYYY-MM-DD;Place)
     */
    fromEntityId?: string;
    toEntityType?: EntityType;
    /**
     * Target entity ID (string to allow composite IDs)
     */
    toEntityId?: string;
    /**
     * Type of relationship (e.g., \"parent\", \"spouse\", \"owner\", \"Mutter\", \"Vater\")
     */
    relationshipType?: string | null;
    /**
     * Language of the relationship type (de, en, etc.)
     */
    language?: string | null;
    /**
     * When the relationship started
     */
    startDate?: string | null;
    /**
     * When the relationship ended
     */
    endDate?: string | null;
    /**
     * Certainty level (0-100%)
     */
    certainty?: number;
    /**
     * Source of this information
     */
    source?: string | null;
    /**
     * Additional notes
     */
    notes?: string | null;
    /**
     * When this relationship was created
     */
    createdAt?: string;
    /**
     * When this relationship was last updated
     */
    updatedAt?: string;
    /**
     * Is this the primary direction (for bidirectional relationships)  The inverse relationship will have this set to false
     */
    isPrimary?: boolean;
}
export namespace Relationship {
}


